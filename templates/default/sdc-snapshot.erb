#!/bin/bash

export SSH_AUTH_SOCK=/dev/null
export SDC_ACCOUNT="<%= node['sdc']['account_name'] %>"
export SDC_URL="<%= node['sdc']['api_endpoint'] %>"
export SDC_KEY_ID=`ssh-keygen -l -f ~/.ssh/sdc-snapshot.pub | awk '{print $2}' | tr -d '\n'`
export MAX_SNAPSHOTS=10

MACHINE=`zonename`

## functions
count_snapshots () {
  SNAPSHOT_COUNT=`sdc-listmachinesnapshots --debug --keyId $SDC_KEY_ID $MACHINE | grep state | grep -c created`
}

create_snapshot () {
  sdc-createmachinesnapshot --debug --keyId "$SDC_KEY_ID" --machine $MACHINE
}

oldest_snapshots () {
  sdc-listmachinesnapshots --debug --keyId "$SDC_KEY_ID" $MACHINE | grep -B 1 "\"state\": \"created\"" | grep "\name\"" | tac | tail +10 | awk 'BEGIN{FS="\""}{print $4}'
}

delete_oldest_snapshots () {
  for snapshot in `oldest_snapshots`
    do
      echo "deleting snapshot $snapshot..."
      sdc-deletemachinesnapshot --debug --keyId "$SDC_KEY_ID" --snapshot "$snapshot" $MACHINE
    done
}

## create a new snapshot, deleting the oldest if we have reached our limit
count_snapshots

while [ $SNAPSHOT_COUNT -ge $MAX_SNAPSHOTS ]
  do
    delete_oldest_snapshots
    SNAPSHOT_COUNT=$(($SNAPSHOT_COUNT - 1))
  done

count_snapshots

if [ $SNAPSHOT_COUNT -ge $MAX_SNAPSHOTS ]; then
  echo "still have $SNAPSHOT_COUNT snapshots remaining... expected them to be at $MAX_SNAPSHOTS."
  exit 1
fi

create_snapshot
