#!/bin/bash

set -e

export SSH_AUTH_SOCK=/dev/null
export SDC_ACCOUNT="<%= node['sdc']['account_name'] %>"
export SDC_URL="<%= node['sdc']['api_endpoint'] %>"
export SDC_KEY_ID=`ssh-keygen -l -f ~/.ssh/sdc-snapshot.pub | awk '{print $2}' | tr -d '\n'`
export MAX_SNAPSHOTS=10
export MIN_FREE=500000  # 500Gb

MACHINE=`zonename`

## functions
count_snapshots () {
  set +e
  SNAPSHOT_COUNT=`sdc-listmachinesnapshots --keyId $SDC_KEY_ID $MACHINE | grep state | grep -c created`
  set -e
}

create_snapshot () {
  sdc-createmachinesnapshot --keyId "$SDC_KEY_ID" --machine $MACHINE
}

oldest_snapshots () {
  set +e
  OLDEST_SNAPSHOTS=sdc-listmachinesnapshots --keyId "$SDC_KEY_ID" $MACHINE | grep -B 1 "\"state\": \"created\"" | grep "\name\"" | tac | tail +10 | awk 'BEGIN{FS="\""}{print $4}'
  set -e
}

delete_oldest_snapshots () {
  oldest_snapshots
  for snapshot in $OLDEST_SNAPSHOTS
    do
      echo "[`date`] deleting snapshot $snapshot..."
      sdc-deletemachinesnapshot --debug --keyId "$SDC_KEY_ID" --snapshot "$snapshot" $MACHINE
    done
}

check_free_space () {
  FREE=`df -m / | tail -1| awk '{print $4}'`
  if [ $FREE -lt $MIN_FREE ]; then
    echo "not enough free space left for snapshots, giving up! Need ${MIN_FREE}Mb, have ${FREE}Mb"
    exit 1
  fi
}

## delete all but the $MAX_SNAPSHOTS most recent snapshots and create a new one
count_snapshots

while [ $SNAPSHOT_COUNT -ge $MAX_SNAPSHOTS ]
  do
    delete_oldest_snapshots
    SNAPSHOT_COUNT=$(($SNAPSHOT_COUNT - 1))
  done

check_free_space

echo "[`date`] creating snapshot..."
create_snapshot
